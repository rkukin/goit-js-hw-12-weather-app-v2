{"version":3,"sources":["webpack:///./getGeoPosition.js","webpack:///./fetchWeather.js","webpack:///./index.js"],"names":["options","fetchWeather","coordinates","Promise","resolve","reject","fetch","then","response","console","log","json","resp","data","error","msg","weatherSection","document","querySelector","cityForm","cityName","weatherIcon","locationValue","tempValue","humidityValue","windValue","conditionsValue","renderWeather","weatherData","classList","remove","setAttribute","current_condition","weatherIconUrl","value","replace","weatherDesc","innerHTML","request","query","temp_C","humidity","windspeedKmph","winddir16Point","hideWeatherSection","add","maximumAge","enableHighAccuracy","window","onload","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","catch","PNotify","alert","addEventListener","e","preventDefault"],"mappings":"+KAGQA,ECDOC,EAAA,SAASC,GAMtB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,MAAK,mGAC+EJ,EAD/E,gBAEHK,KAAK,SAAAC,GACLC,QAAQC,MACRF,EAASG,OAAOJ,KAAK,SAAAK,GACdA,EAAKC,KAAKC,MAEbT,EAAOO,EAAKC,KAAKC,MAAM,GAAGC,KAFNX,EAAQQ,sBCNhCI,EAAiBC,SAASC,cAAc,YACxCC,EAAWF,SAASC,cAAc,gBAClCE,EAAWH,SAASC,cAAc,iBAElCG,EAAcJ,SAASC,cAAc,SACrCI,EAAgBL,SAASC,cAAc,yBACvCK,EAAYN,SAASC,cAAc,qBACnCM,EAAgBP,SAASC,cAAc,yBACvCO,EAAYR,SAASC,cAAc,qBACnCQ,EAAkBT,SAASC,cAAc,2BAE/C,SAASS,EAAcC,GACrBZ,EAAea,UAAUC,OAAO,aAChCT,EAAYU,aAAa,MAAOH,EAAYf,KAAKmB,kBAAkB,GAAGC,eAAe,GAAGC,MAAMC,QAAQ,OAAQ,UAC9Gd,EAAYU,aAAa,MAAOH,EAAYf,KAAKmB,kBAAkB,GAAGI,YAAY,GAAGF,OACrFZ,EAAce,UAAd,GAA6BT,EAAYf,KAAKyB,QAAQ,GAAGC,MACzDhB,EAAUc,UAAeT,EAAYf,KAAKmB,kBAAkB,GAAGQ,OAA/D,KACAhB,EAAca,UAAeT,EAAYf,KAAKmB,kBAAkB,GAAGS,SAAnE,KACAhB,EAAUY,UAAeT,EAAYf,KAAKmB,kBAAkB,GAAGU,cAA/D,UAAsFd,EAAYf,KAAKmB,kBAAkB,GAAGW,eAC5HjB,EAAgBW,UAAYT,EAAYf,KAAKmB,kBAAkB,GAAGI,YAAY,GAAGF,MAGnF,SAASU,IACP5B,EAAea,UAAUgB,IAAI,cF5BvB7C,EAAU,CACd8C,WAAY,KACZC,oBAAoB,GAEf,IAAI5C,QAAQ,SAACC,EAASC,GAC3B2C,OAAOC,OAAS,WAUdC,UAAUC,YAAYC,mBATL,SAASC,GACxBjD,EAAQiD,EAASC,SAEJ,WACbjD,EACE,sEAI2DL,OEiBlEO,KAAK,SAAA8C,GACJpD,EAAY,IAAKoD,EAASE,SAAd,KAA2BF,EAASG,WAAajD,KAAK,SAAAM,GAChEc,EAAcd,OAGjB4C,MAAM,SAAA3C,GACL4C,IAAQC,MAAM7C,GACd8B,MAGJzB,EAASyC,iBAAiB,SAAU,SAAAC,GAClCA,EAAEC,iBACF7D,EAAamB,EAASc,OACnB3B,KAAK,SAAAM,GACJc,EAAcd,KAEf4C,MAAM,SAAA3C,GACL4C,IAAQC,MAAM7C,GACd8B","file":"main.17be94106b7aaa60b93b.js","sourcesContent":["'use strict';\n\nexport default function() {\n  const options = {\n    maximumAge: 1800000,\n    enableHighAccuracy: true,\n  };\n  return new Promise((resolve, reject) => {\n    window.onload = function() {\n      let geoSuccess = function(position) {\n        resolve(position.coords);\n      };\n      let geoError = function() {\n        reject(\n          'Нет прав доступа к геопозиции, используйте поиск по имени города.',\n        );\n      };\n\n      navigator.geolocation.getCurrentPosition(geoSuccess, geoError, options);\n    };\n  });\n}\n","'use strict';\n\nexport default function(coordinates) {\n  // Location Name\tquery = New York\tThe standard way of passing a location name to the API.\n  // Coordinates (Lat/Lon)\tquery = 40.7831,-73.9712\n\n  const ACCESS_KEY = 'bb8dce5fca9942ada2d61212192410';\n\n  return new Promise((resolve, reject) => {\n    fetch(\n      `https://api.worldweatheronline.com/premium/v1/weather.ashx?key=${ACCESS_KEY}&q=${coordinates}&format=json`,\n    ).then(response => {\n      console.log();\n      response.json().then(resp => {\n        if (!resp.data.error) resolve(resp);\n        else {\n          reject(resp.data.error[0].msg);\n        }\n      });\n    });\n  });\n}\n","'use strict';\n\nimport './styles.css';\nimport getGeoPosition from './getGeoPosition';\nimport fetchWeather from './fetchWeather';\n\nimport PNotify from '../node_modules/pnotify/dist/es/PNotify.js';\n\nconst weatherSection = document.querySelector('#weather');\nconst cityForm = document.querySelector('#search-form');\nconst cityName = document.querySelector('[name=\"city\"]');\n\nconst weatherIcon = document.querySelector('.icon');\nconst locationValue = document.querySelector('[data-field=location]');\nconst tempValue = document.querySelector('[data-field=temp]');\nconst humidityValue = document.querySelector('[data-field=humidity]');\nconst windValue = document.querySelector('[data-field=wind]');\nconst conditionsValue = document.querySelector('[data-field=conditions]');\n\nfunction renderWeather(weatherData) {\n  weatherSection.classList.remove('is-hidden');\n  weatherIcon.setAttribute('src', weatherData.data.current_condition[0].weatherIconUrl[0].value.replace('http', 'https'));\n  weatherIcon.setAttribute('alt', weatherData.data.current_condition[0].weatherDesc[0].value);\n  locationValue.innerHTML = `${weatherData.data.request[0].query}`;\n  tempValue.innerHTML = `${weatherData.data.current_condition[0].temp_C} C`;\n  humidityValue.innerHTML = `${weatherData.data.current_condition[0].humidity} %`;\n  windValue.innerHTML = `${weatherData.data.current_condition[0].windspeedKmph} Kmph, ${weatherData.data.current_condition[0].winddir16Point}`;\n  conditionsValue.innerHTML = weatherData.data.current_condition[0].weatherDesc[0].value;\n}\n\nfunction hideWeatherSection() {\n  weatherSection.classList.add('is-hidden');\n}\n\ngetGeoPosition()\n  .then(position => {\n    fetchWeather(` ${position.latitude}, ${position.longitude}`).then(data => {\n      renderWeather(data);\n    });\n  })\n  .catch(error => {\n    PNotify.alert(error);\n    hideWeatherSection();\n  });\n\ncityForm.addEventListener('submit', e => {\n  e.preventDefault();\n  fetchWeather(cityName.value)\n    .then(data => {\n      renderWeather(data);\n    })\n    .catch(error => {\n      PNotify.alert(error);\n      hideWeatherSection();\n    });\n});\n"],"sourceRoot":""}